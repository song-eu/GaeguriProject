type Query {
    searchProject(input: searchKeyword): resSearch
}

input searchKeyword {
    category: String
    keyword: String
}

type resSearch {
    ok: Boolean!
    error: String
    filteredPrj: [Project]
}

type Project {
    Project_id:Int
    Project_name: String
    StartAt: Date
    EndAt: Date
    Desc: String
    projectstack: [PS_ProjectStack]
    status: String
    projectpositionno: [StatusOfPosition]
    CreatedBy: Int
    Owner_id: Int
    createdAt: Date
    updatedAt: Date
}
type PS_ProjectStack {
    PS_id: String
    Project_id: Int
    Stack_id: Int
    stack: Stack
}

type Stack {
    Stack_id: Int
    Stack_name: String
}

type StatusOfPosition {
    PP_id: Int
    Project_id: Int
    Position_id: Int
    NoOfPosition: Int
    position: Position
    PC: [PC]
}
type PC {
    Project_Position_id: Int
    Sender_id: Int
    Candidate_id:Int
    Allowed: String
    Owner: String
    candidate: UserInfo
}

type Position {
    Position_name: String
}

type UserInfo{
    User_id: Int
    Email: String
    Username: String
}

